{"ast":null,"code":"var _jsxFileName = \"D:\\\\all project\\\\java\\\\corso java\\\\servletReact\\\\src\\\\main\\\\frontend\\\\src\\\\component\\\\connectServer.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConnectServer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    let users = fetch(\"ConnectFrontend\").then(response => response.json()).then(response => this.setState({\n      users: response\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.users.map(element => {\n        /*#__PURE__*/\n        _jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ConnectServer;","map":{"version":3,"sources":["D:/all project/java/corso java/servletReact/src/main/frontend/src/component/connectServer.js"],"names":["React","Component","ConnectServer","constructor","state","users","componentDidMount","fetch","then","response","json","setState","render","map","element"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAElCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAID,KAAK,GAAGE,KAAK,CAAC,iBAAD,CAAL,CAAyBC,IAAzB,CAA8BC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA1C,EAA2DF,IAA3D,CAAgEC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAACN,MAAAA,KAAK,EAAEI;AAAR,KAAd,CAA5E,CAAZ;AAEH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBC,OAAO,IAAI;AAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AArBiC;;AAwBtC,eAAeZ,aAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass ConnectServer extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {users: []}\r\n    }\r\n\r\n    componentDidMount() {\r\n        let users = fetch(\"ConnectFrontend\").then(response => response.json()).then(response => this.setState({users: response}))\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.users.map(element => {\r\n                    <p>{}</p>\r\n                })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConnectServer;"]},"metadata":{},"sourceType":"module"}