{"ast":null,"code":"var _jsxFileName = \"D:\\\\all project\\\\java\\\\corso java\\\\restReact\\\\src\\\\main\\\\frontend\\\\src\\\\component\\\\connectServer.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConnectServer extends Component {\n  constructor() {\n    super();\n\n    this.prova = e => {\n      let user = fetch(\"api/users/\" + e.target.id).then(response => response.json()).then(response => console.log(response));\n    };\n\n    this.state = {\n      users: []\n    };\n    this.state = {\n      modifyUser: false\n    };\n  }\n\n  componentDidMount() {\n    let users = fetch(\"api/users\").then(response => response.json()).then(response => this.setState({\n      users: response\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.users.map(element => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: element.id,\n          onClick: this.prova,\n          children: [element.id, \" \", element.firstName, \" \", element.lastName, \" \", element.memo, \" \", element.number, \" \", element.date]\n        }, element.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ConnectServer;","map":{"version":3,"sources":["D:/all project/java/corso java/restReact/src/main/frontend/src/component/connectServer.js"],"names":["React","Component","ConnectServer","constructor","prova","e","user","fetch","target","id","then","response","json","console","log","state","users","modifyUser","componentDidMount","setState","render","map","element","firstName","lastName","memo","number","date"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAElCE,EAAAA,WAAW,GAAG;AACV;;AADU,SAUdC,KAVc,GAULC,CAAD,IAAO;AACX,UAAIC,IAAI,GAAGC,KAAK,CAAC,eAAeF,CAAC,CAACG,MAAF,CAASC,EAAzB,CAAL,CAAkCC,IAAlC,CAAuCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAnD,EAAoEF,IAApE,CAAyEC,QAAQ,IAAIE,OAAO,CAACC,GAAR,CAAYH,QAAZ,CAArF,CAAX;AACH,KAZa;;AAEV,SAAKI,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACA,SAAKD,KAAL,GAAa;AAACE,MAAAA,UAAU,EAAG;AAAd,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIF,KAAK,GAAGT,KAAK,CAAC,WAAD,CAAL,CAAmBG,IAAnB,CAAwBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAApC,EAAqDF,IAArD,CAA0DC,QAAQ,IAAI,KAAKQ,QAAL,CAAc;AAACH,MAAAA,KAAK,EAAEL;AAAR,KAAd,CAAtE,CAAZ;AACH;;AAMDS,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI;AAAA,kBACK,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAqBC,OAAO,iBACzB;AAAI,UAAA,EAAE,EAAEA,OAAO,CAACb,EAAhB;AAAqC,UAAA,OAAO,EAAE,KAAKL,KAAnD;AAAA,qBAA2DkB,OAAO,CAACb,EAAnE,OAAwEa,OAAO,CAACC,SAAhF,OAA4FD,OAAO,CAACE,QAApG,OAA+GF,OAAO,CAACG,IAAvH,OAA8HH,OAAO,CAACI,MAAtI,OAA+IJ,OAAO,CAACK,IAAvJ;AAAA,WAAyBL,OAAO,CAACb,EAAjC;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA9BiC;;AAiCtC,eAAeP,aAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass ConnectServer extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {users: []}\r\n        this.state = {modifyUser : false}\r\n    }\r\n\r\n    componentDidMount() {\r\n        let users = fetch(\"api/users\").then(response => response.json()).then(response => this.setState({users: response}))\r\n    }\r\n\r\n    prova = (e) => {\r\n        let user = fetch(\"api/users/\" + e.target.id).then(response => response.json()).then(response => console.log(response))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ul>\r\n                    {this.state.users.map(element => (\r\n                        <li id={element.id} key={element.id} onClick={this.prova}>{element.id} {element.firstName} {element.lastName} {element.memo} {element.number} {element.date}</li>\r\n                    ))\r\n                    }\r\n                </ul>\r\n                {\r\n\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConnectServer;"]},"metadata":{},"sourceType":"module"}